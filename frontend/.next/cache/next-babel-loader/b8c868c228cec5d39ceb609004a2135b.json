{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\OneDrive\\\\code\\\\esports-daily\\\\frontend\\\\components\\\\Submit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ARTICLE_MUTATION(\\n    $title: String!\\n    $description: String\\n    $tags: [String]\\n    $body: String!\\n  ) {\\n    createPost(\\n      title: $title\\n      description: $description\\n      tags: $tags\\n      body: $body\\n    ) {\\n      id\\n      title\\n      description\\n      tags\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Component } from \"react\";\nimport styled from \"styled-components\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport User from \"./User\";\nvar ARTICLE_MUTATION = gql(_templateObject());\nvar FormStyle = styled.form.withConfig({\n  displayName: \"Submit__FormStyle\",\n  componentId: \"sc-149xhhl-0\"\n})([\"label{font-size:1.2em;font-weight:600;font-style:italic;color:#010101;display:block;}textarea{display:block;}textarea,input{margin:0 auto;}input[type=\\\"text\\\"],textarea{width:50em;}input[type=\\\"text\\\"],textarea{border:5px yellow solid;border-radius:10px;}button{font-size:1.5em;font-weight:600;font-style:italic;background:yellow;border:2px black solid;border-radius:10px;margin-top:0.8em;}\"]);\nvar BodyDiv = styled.div.withConfig({\n  displayName: \"Submit__BodyDiv\",\n  componentId: \"sc-149xhhl-1\"\n})([\"text-align:center;\"]);\n\nvar Submit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Submit, _Component);\n\n  function Submit(props) {\n    var _this;\n\n    _classCallCheck(this, Submit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submit).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      title: \"\",\n      description: \"\",\n      tags: \"\",\n      body: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Submit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.isLoggedIn.me) {\n        return __jsx(Mutation, {\n          mutation: ARTICLE_MUTATION,\n          variables: this.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, function (createPost, _ref) {\n          var loading = _ref.loading,\n              error = _ref.error;\n          return __jsx(BodyDiv, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, __jsx(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, \"Submit an article\"), __jsx(FormStyle, {\n            method: \"post\",\n            onSubmit:\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(e) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        e.preventDefault();\n                        _context.next = 3;\n                        return createPost();\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, __jsx(\"fieldset\", {\n            disabled: loading,\n            \"aria-busy\": loading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"TITLE\"), __jsx(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: _this2.state.title,\n            onChange: _this2.saveToState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }), __jsx(\"label\", {\n            htmlFor: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \"DESCRIPTION\"), __jsx(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            value: _this2.state.description,\n            onChange: _this2.saveToState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), __jsx(\"label\", {\n            htmlFor: \"tags\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, \"TAGS\"), __jsx(\"input\", {\n            type: \"text\",\n            id: \"tags\",\n            name: \"tags\",\n            value: _this2.state.tags,\n            onChange: _this2.saveToState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }), __jsx(\"label\", {\n            htmlFor: \"body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, \"BODY (MARKDOWN SUPPORTED)\"), __jsx(\"textarea\", {\n            rows: \"30\",\n            cols: \"50\",\n            id: \"body\",\n            name: \"body\",\n            title: \"body\",\n            value: _this2.state.body,\n            onChange: _this2.saveToState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }), __jsx(\"button\", {\n            type: \"submit\",\n            id: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Submit\"))));\n        });\n      } else {\n        return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"You are not logged in!\");\n      }\n    }\n  }]);\n\n  return Submit;\n}(Component);\n\nexport default Submit;","map":{"version":3,"sources":["C:\\Users\\jacob\\OneDrive\\code\\esports-daily\\frontend\\components\\Submit.js"],"names":["Component","styled","gql","Mutation","User","ARTICLE_MUTATION","FormStyle","form","BodyDiv","div","Submit","props","title","description","tags","body","e","setState","target","name","value","isLoggedIn","me","state","createPost","loading","error","preventDefault","saveToState"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport User from \"./User\";\r\n\r\nconst ARTICLE_MUTATION = gql`\r\n  mutation ARTICLE_MUTATION(\r\n    $title: String!\r\n    $description: String\r\n    $tags: [String]\r\n    $body: String!\r\n  ) {\r\n    createPost(\r\n      title: $title\r\n      description: $description\r\n      tags: $tags\r\n      body: $body\r\n    ) {\r\n      id\r\n      title\r\n      description\r\n      tags\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormStyle = styled.form`\r\n  label {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    color: #010101;\r\n    display: block;\r\n  }\r\n  textarea {\r\n    display: block;\r\n  }\r\n  textarea,\r\n  input {\r\n    margin: 0 auto;\r\n  }\r\n  input[type=\"text\"],\r\n  textarea {\r\n    width: 50em;\r\n  }\r\n  input[type=\"text\"],\r\n  textarea {\r\n    border: 5px yellow solid;\r\n    border-radius: 10px;\r\n  }\r\n  button {\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background: yellow;\r\n    border: 2px black solid;\r\n    border-radius: 10px;\r\n    margin-top: 0.8em;\r\n  }\r\n`;\r\n\r\nconst BodyDiv = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nclass Submit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    tags: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  saveToState = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isLoggedIn.me) {\r\n      return (\r\n        <Mutation mutation={ARTICLE_MUTATION} variables={this.state}>\r\n          {(createPost, { loading, error }) => (\r\n            <BodyDiv>\r\n              <h1>Submit an article</h1>\r\n              <FormStyle\r\n                method=\"post\"\r\n                onSubmit={async e => {\r\n                  e.preventDefault();\r\n                  await createPost();\r\n                }}\r\n              >\r\n                <fieldset disabled={loading} aria-busy={loading}>\r\n                  <label htmlFor=\"title\">TITLE</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                  <label htmlFor=\"description\">DESCRIPTION</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                  <label htmlFor=\"tags\">TAGS</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"tags\"\r\n                    name=\"tags\"\r\n                    value={this.state.tags}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                  <label htmlFor=\"body\">BODY (MARKDOWN SUPPORTED)</label>\r\n                  <textarea\r\n                    rows=\"30\"\r\n                    cols=\"50\"\r\n                    id=\"body\"\r\n                    name=\"body\"\r\n                    title=\"body\"\r\n                    value={this.state.body}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                  <button type=\"submit\" id=\"submit\">\r\n                    Submit\r\n                  </button>\r\n                </fieldset>\r\n              </FormStyle>\r\n            </BodyDiv>\r\n          )}\r\n        </Mutation>\r\n      );\r\n    } else {\r\n      return <p>You are not logged in!</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Submit;\r\n"]},"metadata":{},"sourceType":"module"}