{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\OneDrive\\\\code\\\\esports-daily\\\\frontend\\\\components\\\\Posts.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport styled, { ThemeProvider, injectGlobal } from \"styled-components\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Post from \"./Post\";\nconst ALL_POSTS_QUERY = gql`\n  query ALL_POSTS_QUERY {\n    posts {\n      id\n      title\n      description\n      body\n      createdAt\n    }\n  }\n`;\nconst PostList = styled.div.withConfig({\n  displayName: \"Posts__PostList\",\n  componentId: \"tvags4-0\"\n})([\"display:grid;grid-template-columns:4fr 4fr;grid-gap:60px;margin:0 auto;\"]);\nexport default class Posts extends Component {\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Query, {\n      query: ALL_POSTS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading ...\");\n      if (error) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Error: \", error.message);\n      return __jsx(PostList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, data.posts.map(post => __jsx(Post, {\n        post: post,\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jacob\\OneDrive\\code\\esports-daily\\frontend\\components\\Posts.js"],"names":["React","Component","styled","ThemeProvider","injectGlobal","Query","gql","Post","ALL_POSTS_QUERY","PostList","div","Posts","render","data","error","loading","message","posts","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,EAAgCC,YAAhC,QAAoD,mBAApD;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,eAAe,GAAGF,GAAI;;;;;;;;;;CAA5B;AAYA,MAAMG,QAAQ,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,+EAAd;AAOA,eAAe,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAC3CW,EAAAA,MAAM,GAAG;AACP,WACE,4BACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEK,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC7B,UAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACb,UAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,aACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAClB,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD,KAXH,CADF,CADF;AAiBD;;AAnB0C","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled, { ThemeProvider, injectGlobal } from \"styled-components\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Post from \"./Post\";\r\n\r\nconst ALL_POSTS_QUERY = gql`\r\n  query ALL_POSTS_QUERY {\r\n    posts {\r\n      id\r\n      title\r\n      description\r\n      body\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 4fr 4fr;\r\n  grid-gap: 60px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default class Posts extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Query query={ALL_POSTS_QUERY}>\r\n          {({ data, error, loading }) => {\r\n            if (loading) return <p>Loading ...</p>;\r\n            if (error) return <p>Error: {error.message}</p>;\r\n            return (\r\n              <PostList>\r\n                {data.posts.map(post => (\r\n                  <Post post={post} key={post.id} />\r\n                ))}\r\n              </PostList>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}