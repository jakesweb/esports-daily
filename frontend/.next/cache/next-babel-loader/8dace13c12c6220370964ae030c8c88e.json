{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\OneDrive\\\\code\\\\esports-daily\\\\frontend\\\\components\\\\PostDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_POST_QUERY($postid: ID!) {\\n    post(where: { id: $postid }) {\\n      id\\n      title\\n      description\\n      body\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nvar SINGLE_POST_QUERY = gql(_templateObject());\nvar StyledDiv = styled.div.withConfig({\n  displayName: \"PostDetail__StyledDiv\",\n  componentId: \"sc-237jc6-0\"\n})([\".meta{text-align:left;margin:5%;line-height:20%;.title{font-size:1.4em;font-weight:600;}}.markdown{margin:0 8%;}\"]);\n\nvar PostDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostDetail, _Component);\n\n  function PostDetail() {\n    _classCallCheck(this, PostDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostDetail).apply(this, arguments));\n  }\n\n  _createClass(PostDetail, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Query, {\n        query: SINGLE_POST_QUERY,\n        variables: {\n          postid: this.props.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            error = _ref.error,\n            loading = _ref.loading;\n        var post = data.post;\n        if (loading) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading ...\");\n        if (error) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Error: \", error.message);\n        return __jsx(StyledDiv, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          \"class\": \"meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          \"class\": \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, post.title), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Posted on \", post.createdAt.toLocaleTimeString()), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, post.description)), __jsx(\"div\", {\n          \"class\": \"markdown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, __jsx(ReactMarkdown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, post.body)));\n      });\n    }\n  }]);\n\n  return PostDetail;\n}(Component);\n\nexport default PostDetail;","map":{"version":3,"sources":["C:\\Users\\jacob\\OneDrive\\code\\esports-daily\\frontend\\components\\PostDetail.js"],"names":["React","Component","ReactMarkdown","styled","PropTypes","Query","gql","SINGLE_POST_QUERY","StyledDiv","div","PostDetail","postid","props","id","data","error","loading","post","message","title","createdAt","toLocaleTimeString","description","body"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;AAYA,IAAME,SAAS,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wHAAf;;IAeMC,U;;;;;;;;;;;;;6BACK;AACP,aACE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,iBAAd;AAAiC,QAAA,SAAS,EAAE;AAAEI,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AAArB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,KAAqB,QAArBA,KAAqB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AAAA,YACrBC,IADqB,GACZH,IADY,CACrBG,IADqB;AAE7B,YAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACb,YAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWA,KAAK,CAACG,OAAjB,CAAP;AACX,eACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,mBAAM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,mBAAM,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBD,IAAI,CAACE,KAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAcF,IAAI,CAACG,SAAL,CAAeC,kBAAf,EAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIJ,IAAI,CAACK,WAAT,CAHF,CADF,EAME;AAAK,mBAAM,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBL,IAAI,CAACM,IAArB,CADF,CANF,CADF;AAYD,OAjBH,CADF;AAqBD;;;;EAvBsBtB,S;;AA0BzB,eAAeS,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst SINGLE_POST_QUERY = gql`\r\n  query SINGLE_POST_QUERY($postid: ID!) {\r\n    post(where: { id: $postid }) {\r\n      id\r\n      title\r\n      description\r\n      body\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  .meta {\r\n    text-align: left;\r\n    margin: 5%;\r\n    line-height: 20%;\r\n    .title {\r\n      font-size: 1.4em;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  .markdown {\r\n    margin: 0 8%;\r\n  }\r\n`;\r\n\r\nclass PostDetail extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={SINGLE_POST_QUERY} variables={{ postid: this.props.id }}>\r\n        {({ data, error, loading }) => {\r\n          const { post } = data;\r\n          if (loading) return <p>Loading ...</p>;\r\n          if (error) return <p>Error: {error.message}</p>;\r\n          return (\r\n            <StyledDiv>\r\n              <div class=\"meta\">\r\n                <p class=\"title\">{post.title}</p>\r\n                <p>Posted on {post.createdAt.toLocaleTimeString()}</p>\r\n                <p>{post.description}</p>\r\n              </div>\r\n              <div class=\"markdown\">\r\n                <ReactMarkdown>{post.body}</ReactMarkdown>\r\n              </div>\r\n            </StyledDiv>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostDetail;\r\n"]},"metadata":{},"sourceType":"module"}