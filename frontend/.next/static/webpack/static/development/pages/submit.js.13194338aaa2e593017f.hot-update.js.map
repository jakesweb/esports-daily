{"version":3,"file":"static/webpack/static\\development\\pages\\submit.js.13194338aaa2e593017f.hot-update.js","sources":["webpack:///./components/DisplayError.js","webpack:///./components/Signin.js","webpack:///./pages/submit.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorStyles = styled.div`\r\n  padding: 2rem;\r\n  background: white;\r\n  margin: 2rem 0;\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  border-left: 5px solid red;\r\n  p {\r\n    margin: 0;\r\n    font-weight: 100;\r\n  }\r\n  strong {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst DisplayError = ({ error }) => {\r\n  if (!error || !error.message) return null;\r\n  if (\r\n    error.networkError &&\r\n    error.networkError.result &&\r\n    error.networkError.result.errors.length\r\n  ) {\r\n    return error.networkError.result.errors.map((error, i) => (\r\n      <ErrorStyles key={i}>\r\n        <p data-test=\"graphql-error\">\r\n          <strong>ERROR:</strong>\r\n          {error.message.replace(\"GraphQL error: \", \"\")}\r\n        </p>\r\n      </ErrorStyles>\r\n    ));\r\n  }\r\n  return (\r\n    <ErrorStyles>\r\n      <p data-test=\"graphql-error\">\r\n        <strong>ERROR:</strong>\r\n        {error.message.replace(\"GraphQL error: \", \"\")}\r\n      </p>\r\n    </ErrorStyles>\r\n  );\r\n};\r\n\r\nDisplayError.defaultProps = {\r\n  error: {}\r\n};\r\n\r\nDisplayError.propTypes = {\r\n  error: PropTypes.object\r\n};\r\n\r\nexport default DisplayError;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport styled from \"styled-components\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { CURRENT_USER_QUERY } from \"./User\";\r\nimport DisplayError from \"./DisplayError\";\r\n\r\nconst SIGNIN_MUTATION = gql`\r\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\r\n    signin(email: $email, password: $password) {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\r\n  background: rgba(0, 0, 0, 0.02);\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  padding: 20px;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 1rem;\r\n  }\r\n  input,\r\n  textarea,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    border: 1px solid black;\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: red;\r\n    }\r\n  }\r\n  button,\r\n  input[type=\"submit\"] {\r\n    width: auto;\r\n    background: yellow;\r\n    color: black;\r\n    border: 0;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    padding: 0.5rem 1.2rem;\r\n  }\r\n`;\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  saveToState = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Mutation\r\n          mutation={SIGNIN_MUTATION}\r\n          variables={this.state}\r\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n        >\r\n          {(signin, { error, loading }) => (\r\n            <StyledForm\r\n              method=\"post\"\r\n              onSubmit={async e => {\r\n                e.preventDefault();\r\n                await signin();\r\n                this.setState({ email: \"\", password: \"\" });\r\n              }}\r\n            >\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <DisplayError error={error} />\r\n                <h2>Sign In</h2>\r\n                <label htmlFor=\"email\">\r\n                  Email\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                  Password\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.saveToState}\r\n                  />\r\n                </label>\r\n                <button type=\"submit\">Sign In!</button>\r\n              </fieldset>\r\n            </StyledForm>\r\n          )}\r\n        </Mutation>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\nexport { SIGNIN_MUTATION };\r\n","import React, { Component } from \"react\";\r\nimport Submit from \"../components/Submit\";\r\nimport User from \"../components/User\";\r\nimport Signin from \"../components/Signin\";\r\n\r\nexport default class submit extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <User>\r\n          {({ data }) => {\r\n            const me = data ? data.me : null;\r\n            {\r\n              me && <Submit />;\r\n            }\r\n            {\r\n              !me && <Signin />;\r\n            }\r\n          }}\r\n        </User>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AACA;AAiCA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAuCA;;;;AAzDA;AACA;AA2DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;;;;AAjBA;AACA;;;;;A","sourceRoot":""}